void drivercontrol( void ) {
  
  while (true) {
    
    // Autonomous Switch
    if(Controller1.ButtonB.pressing()){
      autonomous();
    }

    // Cube stack angle adjustment using the arrow pad
    if(Controller1.ButtonDown.pressing()) {
      StackAngle.spin(directionType::fwd, 200, velocityUnits::rpm);
    }
    else if(Controller1.ButtonUp.pressing()) {
      StackAngle.spin(directionType::rev, 60, velocityUnits::rpm);
    }
    else{
      StackAngle.stop(brakeType::hold);
    }
    
    
    // Cube intake angle: forward is up, reverse is down
    if(Controller1.ButtonR1.pressing()) {
      IntakeAngle.spin(directionType::fwd, 200, velocityUnits::rpm);
    }
    else if(Controller1.ButtonR2.pressing()) {
      IntakeAngle.spin(directionType::rev, 200, velocityUnits::rpm);
    }
    else{
      IntakeAngle.stop(brakeType::hold);
    }
    
    // Sticky intake button
    if(Controller1.ButtonL1.pressing()){
      CubeSuck1.spin(directionType::rev, 175, velocityUnits::rpm);
      CubeSuck2.spin(directionType::rev, 175, velocityUnits::rpm);
    }
    else if(Controller1.ButtonL2.pressing()){
      CubeSuck1.spin(directionType::fwd, 100, velocityUnits::rpm);
      CubeSuck2.spin(directionType::fwd, 100, velocityUnits::rpm);
    }
    else{
      CubeSuck1.stop(brakeType::coast);
      CubeSuck2.stop(brakeType::coast);
    }

    // Primary drive controls
    DriveR1.spin(vex::directionType::fwd, (Controller1.Axis3.value() + Controller1.Axis1.value())/1, vex::velocityUnits::pct);
    DriveR2.spin(vex::directionType::fwd, (Controller1.Axis3.value() + Controller1.Axis1.value())/1, vex::velocityUnits::pct);
    DriveL1.spin(vex::directionType::fwd, (Controller1.Axis3.value() - Controller1.Axis1.value())/1, vex::velocityUnits::pct);
    DriveL2.spin(vex::directionType::fwd, (Controller1.Axis3.value() - Controller1.Axis1.value())/1, vex::velocityUnits::pct);

    // Delay to prevent wasted resources
    vex::task::sleep(20); 
  }
}